"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.InsetContainer = void 0;

var _react = _interopRequireDefault(require("react"));

var _Container = _interopRequireDefault(require("@mui/material/Container"));

var _styles = require("@mui/material/styles");

var _excluded = ["children", "leftSidebar", "rightSidebar"];

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

var InsetContainerRoot = (0, _styles.styled)(_Container["default"], {
  name: "AppInsetContainer",
  slot: "Root",
  overridesResolver: function overridesResolver(props, styles) {
    return styles.root;
  }
})({
  display: "flex",
  flexFlow: "row nowrap",
  flexGrow: 1,
  '& > *:not([class*="AppInsetSidebar"])': {
    flexGrow: 1,
    overflow: "auto"
  }
});

var InsetContainer = function InsetContainer(_ref) {
  var children = _ref.children,
      leftSidebar = _ref.leftSidebar,
      rightSidebar = _ref.rightSidebar,
      inProps = _objectWithoutProperties(_ref, _excluded);

  var props = (0, _styles.useThemeProps)({
    props: inProps,
    name: "AppInsetContainer"
  });
  return /*#__PURE__*/_react["default"].createElement(InsetContainerRoot, props, leftSidebar && /*#__PURE__*/_react["default"].cloneElement(leftSidebar, {
    anchor: "left"
  }), children, rightSidebar && /*#__PURE__*/_react["default"].cloneElement(rightSidebar, {
    anchor: "right"
  }));
};

exports.InsetContainer = InsetContainer;