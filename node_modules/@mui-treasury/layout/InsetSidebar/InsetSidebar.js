"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.InsetSidebar = void 0;

var _react = _interopRequireDefault(require("react"));

var _clsx = _interopRequireDefault(require("clsx"));

var _styles = require("@mui/material/styles");

var _Root = require("../Root/Root");

var _InsetOffset = require("./InsetOffset");

var _excluded = ["anchor", "children", "classes", "RootProps", "rootSx"];

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var InsetSidebarRoot = (0, _styles.styled)("div", {
  name: "AppInsetSidebar",
  slot: "Root",
  overridesResolver: function overridesResolver(props, styles) {
    return styles.root;
  }
})({
  position: "relative",
  flexShrink: 0
});
var InsetSidebarBody = (0, _styles.styled)("div", {
  name: "AppInsetSidebar",
  slot: "Body",
  overridesResolver: function overridesResolver(props, styles) {
    return styles.body;
  }
})(function (_ref) {
  var theme = _ref.theme,
      ownerState = _ref.ownerState;
  return _objectSpread(_objectSpread(_objectSpread({
    display: "flex",
    flexDirection: "column",
    overflow: "auto"
  }, ownerState.anchor === "left" && {
    borderRight: "1px solid"
  }), ownerState.anchor === "right" && {
    borderLeft: "1px solid"
  }), {}, {
    borderColor: theme.palette.divider
  });
});

var InsetSidebar = function InsetSidebar(_ref2) {
  var anchor = _ref2.anchor,
      children = _ref2.children,
      classes = _ref2.classes,
      RootProps = _ref2.RootProps,
      rootSx = _ref2.rootSx,
      props = _objectWithoutProperties(_ref2, _excluded);

  var ctx = (0, _Root.useLayoutCtx)();
  var builder = ctx.builder; // anchor should be injected via InsetContainer

  var sidebar = builder["".concat(anchor, "InsetSidebar")];
  return /*#__PURE__*/_react["default"].createElement(InsetSidebarRoot, _extends({}, RootProps, {
    className: (0, _clsx["default"])(RootProps === null || RootProps === void 0 ? void 0 : RootProps.className, classes === null || classes === void 0 ? void 0 : classes.root),
    sx: _objectSpread(_objectSpread({}, sidebar === null || sidebar === void 0 ? void 0 : sidebar.getSxRoot()), rootSx)
  }), /*#__PURE__*/_react["default"].createElement(InsetSidebarBody, _extends({}, props, {
    className: (0, _clsx["default"])(props === null || props === void 0 ? void 0 : props.className, classes === null || classes === void 0 ? void 0 : classes.paper),
    ownerState: {
      anchor: anchor
    },
    sx: _objectSpread(_objectSpread({}, sidebar === null || sidebar === void 0 ? void 0 : sidebar.getSxBody()), props === null || props === void 0 ? void 0 : props.sx)
  }), /*#__PURE__*/_react["default"].createElement(_InsetOffset.InsetOffset, {
    sidebar: sidebar
  }), typeof children === "function" ? children(ctx) : children));
};

exports.InsetSidebar = InsetSidebar;