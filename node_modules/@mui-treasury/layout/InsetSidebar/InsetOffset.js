"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.InsetOffset = void 0;

var _react = _interopRequireDefault(require("react"));

var _styles = require("@mui/material/styles");

var _Root = require("../Root/Root");

var _useScrollY = require("../hooks/useScrollY");

var _useScreen = require("../hooks/useScreen");

var _HeadersCompiler = require("../MultiHeaders/HeadersCompiler");

var _pickNearestBreakpoint = require("../utils/pickNearestBreakpoint");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

var OffsetRoot = (0, _styles.styled)("div", {
  name: "InsetSidebarOffset",
  slot: "Root"
})(function (_ref) {
  var theme = _ref.theme;
  return {
    transition: theme.transitions.create(["all"], {
      easing: theme.transitions.easing.sharp,
      duration: theme.transitions.duration["short"]
    })
  };
});

var InsetOffset = function InsetOffset(_ref2) {
  var sidebar = _ref2.sidebar;

  var _useLayoutCtx = (0, _Root.useLayoutCtx)(),
      builder = _useLayoutCtx.builder;

  var screen = (0, _useScreen.useScreen)();
  var insetConfig = (0, _pickNearestBreakpoint.pickNearestBreakpoint)(sidebar === null || sidebar === void 0 ? void 0 : sidebar.config, screen); // @ts-ignore

  var _ref3 = insetConfig !== null && insetConfig !== void 0 ? insetConfig : {},
      headerMagnetEnabled = _ref3.headerMagnetEnabled; // dont't calculate scrollY if not magnet for performance


  var scrollY = (0, _useScrollY.useScrollY)(!headerMagnetEnabled);

  var _HeadersCompiler$getA = (0, _HeadersCompiler.HeadersCompiler)([builder.header, builder.topHeader, builder.subheader]).getAllHeight(),
      totalHeight = _HeadersCompiler$getA.totalHeight,
      diffHeight = _HeadersCompiler$getA.diffHeight; // header magnet feature


  var style = {};

  if (headerMagnetEnabled) {
    var maxOffset = diffHeight && screen ? (0, _pickNearestBreakpoint.pickNearestBreakpoint)(diffHeight, screen) : 0;
    style.marginTop = "max(-".concat(scrollY !== null && scrollY !== void 0 ? scrollY : 0, "px, calc(-1 * ").concat(maxOffset, "))");
  }

  if ((insetConfig === null || insetConfig === void 0 ? void 0 : insetConfig.position) !== "fixed") {
    return null;
  }

  return /*#__PURE__*/_react["default"].createElement(OffsetRoot, {
    sx: {
      display: sidebar === null || sidebar === void 0 ? void 0 : sidebar.getSxDisplay("initial"),
      height: totalHeight
    },
    style: style
  });
};

exports.InsetOffset = InsetOffset;