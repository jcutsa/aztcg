"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.EdgeOffset = void 0;

var _react = _interopRequireDefault(require("react"));

var _styles = require("@mui/material/styles");

var _Root = require("../Root/Root");

var _useScreen = require("../hooks/useScreen");

var _EdgeSidebarBuilder = require("./EdgeSidebarBuilder");

var _pickNearestBreakpoint = require("../utils/pickNearestBreakpoint");

var _useScrollY = require("../hooks/useScrollY");

var _HeadersCompiler = require("../MultiHeaders/HeadersCompiler");

var _getEdgeOffsetSxProps = require("./getEdgeOffsetSxProps");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var OffsetRoot = (0, _styles.styled)("div", {
  name: "EdgeSidebarOffset",
  slot: "Root"
})({});

var EdgeOffset = function EdgeOffset(_ref) {
  var sidebarId = _ref.sidebarId;

  var _useLayoutCtx = (0, _Root.useLayoutCtx)(),
      builder = _useLayoutCtx.builder;

  var theme = (0, _styles.useTheme)();
  var screen = (0, _useScreen.useScreen)();
  var edgeSidebar = builder[sidebarId];
  var sidebarConfig = (0, _pickNearestBreakpoint.pickNearestBreakpoint)(edgeSidebar === null || edgeSidebar === void 0 ? void 0 : edgeSidebar.config, screen);
  var headerMagnetEnabled = (_EdgeSidebarBuilder.EdgeSidebarBuilder.isPermanentConfig(sidebarConfig) || _EdgeSidebarBuilder.EdgeSidebarBuilder.isPersistentConfig(sidebarConfig)) && (sidebarConfig === null || sidebarConfig === void 0 ? void 0 : sidebarConfig.headerMagnetEnabled); // dont't calculate scrollY if not magnet for performance

  var scrollY = (0, _useScrollY.useScrollY)(!headerMagnetEnabled);

  var _HeadersCompiler$getC = (0, _HeadersCompiler.HeadersCompiler)([builder.header, builder.topHeader, builder.subheader]).getClippedHeight(sidebarId),
      totalHeight = _HeadersCompiler$getC.totalHeight,
      diffHeight = _HeadersCompiler$getC.diffHeight; // header magnet geature


  var style = {};

  if (headerMagnetEnabled) {
    var maxOffset = diffHeight && screen ? (0, _pickNearestBreakpoint.pickNearestBreakpoint)(diffHeight, screen) : 0;
    style.marginTop = "max(-".concat(scrollY !== null && scrollY !== void 0 ? scrollY : 0, "px, calc(-1 * ").concat(maxOffset, "))");
  } // header offset


  var sxProps = (0, _getEdgeOffsetSxProps.getEdgeOffsetSxProps)(edgeSidebar, totalHeight);
  return /*#__PURE__*/_react["default"].createElement(OffsetRoot, {
    className: "EdgeHeaderOffset",
    sx: _objectSpread(_objectSpread({}, sxProps), {}, {
      transition: theme.transitions.create(["all"], {
        easing: theme.transitions.easing.sharp,
        duration: theme.transitions.duration["short"]
      })
    }),
    style: style
  });
};

exports.EdgeOffset = EdgeOffset;