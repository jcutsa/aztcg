"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.EdgeSidebarBuilder = void 0;

var _ResponsiveBuilder2 = require("../shared/ResponsiveBuilder");

var _combineBreakpoints = require("../utils/combineBreakpoints");

var _constant = require("../utils/constant");

var _pickNearestBreakpoint = require("../utils/pickNearestBreakpoint");

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === "undefined" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it["return"] != null) it["return"](); } finally { if (didErr) throw err; } } }; }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var EdgeSidebarBuilder = /*#__PURE__*/function (_ResponsiveBuilder) {
  _inherits(EdgeSidebarBuilder, _ResponsiveBuilder);

  var _super = _createSuper(EdgeSidebarBuilder);

  function EdgeSidebarBuilder(params) {
    var _this;

    _classCallCheck(this, EdgeSidebarBuilder);

    _this = _super.call(this, params);

    _defineProperty(_assertThisInitialized(_this), "effectedBy", {});

    _defineProperty(_assertThisInitialized(_this), "getFinalWidth", function (config) {
      var _this$state, _config$collapsedWidt;

      return config !== null && config !== void 0 && config.collapsible && (_this$state = _this.state) !== null && _this$state !== void 0 && _this$state.collapsed ? (_config$collapsedWidt = config.collapsedWidth) !== null && _config$collapsedWidt !== void 0 ? _config$collapsedWidt : config.width : config === null || config === void 0 ? void 0 : config.width;
    });

    _this.autoCollapse = params.autoCollapse;
    return _this;
  }

  _createClass(EdgeSidebarBuilder, [{
    key: "setState",
    value: function setState(state) {
      this.state = state;
    }
  }, {
    key: "isFlexiblePersistent",
    value: function isFlexiblePersistent(breakpoint, id) {
      var config = (0, _pickNearestBreakpoint.pickNearestBreakpoint)(this.config, breakpoint);
      return EdgeSidebarBuilder.isFlexiblePersistentConfig(config, id);
    }
  }, {
    key: "getOccupiedSpace",
    value: function getOccupiedSpace(id) {
      var _this2 = this;

      return this.generateSxWithHidden({
        hiddenValue: 0,
        assignValue: function assignValue(breakpointConfig, _, lastResultVal) {
          if (EdgeSidebarBuilder.isTemporaryConfig(breakpointConfig)) {
            if (lastResultVal !== undefined) {
              return 0;
            }

            return undefined; // do nothing for xs because temporary variant will be modal
          }

          if (EdgeSidebarBuilder.isPersistentConfig(breakpointConfig)) {
            var _this2$state;

            if ((_this2$state = _this2.state) !== null && _this2$state !== void 0 && _this2$state.open && !EdgeSidebarBuilder.isNonePersistentConfig(breakpointConfig, id)) {
              return _this2.getFinalWidth(breakpointConfig);
            } else {
              return 0;
            }
          }

          if (EdgeSidebarBuilder.isPermanentConfig(breakpointConfig)) {
            return _this2.getFinalWidth(breakpointConfig);
          }
        }
      });
    }
  }, {
    key: "getZIndex",
    value: function getZIndex() {
      var theme = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : _constant.DEFAULT_THEME;
      var result = {};
      if (!this.effectedBy.header) return {};
      var breakpoints = (0, _combineBreakpoints.combineBreakpoints)(this.effectedBy.header.config, this.config);

      var _iterator = _createForOfIteratorHelper(breakpoints),
          _step;

      try {
        for (_iterator.s(); !(_step = _iterator.n()).done;) {
          var key = _step.value;
          var bp = key;

          if (this.id) {
            var isClipped = this.effectedBy.header.isClipped(this.id, bp);
            var isAboveSomeEdgeSidebar = this.effectedBy.header.isAboveSomeEdgeSidebar(bp);
            result[bp] = theme.zIndex.drawer + (isAboveSomeEdgeSidebar && !isClipped ? 20 : 0);
          } else {
            console.warn("Cannot find EdgeSidebar id. This might be an internal bug, please open an issue in github.");
          }
        }
      } catch (err) {
        _iterator.e(err);
      } finally {
        _iterator.f();
      }

      return result;
    }
  }, {
    key: "getWidth",
    value: function getWidth() {
      var _this3 = this;

      return this.generateSx(function (breakpointConfig, bp) {
        var _this3$config$bp;

        return EdgeSidebarBuilder.isTemporaryConfig(breakpointConfig) ? (_this3$config$bp = _this3.config[bp]) === null || _this3$config$bp === void 0 ? void 0 : _this3$config$bp.width : _this3.getFinalWidth(breakpointConfig);
      });
    }
  }, {
    key: "getDrawerVariant",
    value: function getDrawerVariant() {
      return this.generateSx(function (config) {
        return config.variant;
      });
    }
  }, {
    key: "getSxProps",
    value: function getSxProps() {
      var theme = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : _constant.DEFAULT_THEME;
      var sxDisplay = this.getSxDisplay("flex");
      var displayKeys = Object.keys(sxDisplay);
      var shouldAttachDisplay = displayKeys.length > 1 || displayKeys.length === 1 && displayKeys[0] !== "xs";
      return _objectSpread({
        width: this.getWidth(),
        zIndex: this.getZIndex(theme)
      }, shouldAttachDisplay && {
        display: sxDisplay
      });
    }
  }, {
    key: "getEdgeTriggerSxDisplay",
    value: function getEdgeTriggerSxDisplay(options) {
      var field = options.field,
          _options$display = options.display,
          display = _options$display === void 0 ? "inline-flex" : _options$display;
      return this.generateSxWithHidden({
        strict: true,
        hiddenValue: "none",
        assignValue: function assignValue(config) {
          if (field === "open") {
            if (EdgeSidebarBuilder.isPermanentConfig(config)) {
              return "none";
            } else {
              return display;
            }
          }

          if (field === "collapsed") {
            if (EdgeSidebarBuilder.isCollapsibleConfig(config)) {
              return display;
            } else {
              return "none";
            }
          }
        }
      });
    }
  }]);

  return EdgeSidebarBuilder;
}(_ResponsiveBuilder2.ResponsiveBuilder);

exports.EdgeSidebarBuilder = EdgeSidebarBuilder;

_defineProperty(EdgeSidebarBuilder, "isPersistentConfig", function (config) {
  return (config === null || config === void 0 ? void 0 : config.variant) === "persistent";
});

_defineProperty(EdgeSidebarBuilder, "isNonePersistentConfig", function (config, id) {
  return !!config && !!EdgeSidebarBuilder.isPersistentConfig(config) && (typeof config.persistentBehavior === "string" && config.persistentBehavior === "none" || _typeof(config.persistentBehavior) === "object" && !!id && config.persistentBehavior[id] === "none");
});

_defineProperty(EdgeSidebarBuilder, "isFlexiblePersistentConfig", function (config, id) {
  return !!config && !!EdgeSidebarBuilder.isPersistentConfig(config) && (typeof config.persistentBehavior === "string" && config.persistentBehavior === "flexible" || _typeof(config.persistentBehavior) === "object" && !!id && config.persistentBehavior[id] === "flexible");
});

_defineProperty(EdgeSidebarBuilder, "isCollapsibleConfig", function (config) {
  return (EdgeSidebarBuilder.isPermanentConfig(config) || EdgeSidebarBuilder.isPersistentConfig(config)) && !!(config !== null && config !== void 0 && config.collapsible);
});

_defineProperty(EdgeSidebarBuilder, "isPermanentConfig", function (config) {
  return (config === null || config === void 0 ? void 0 : config.variant) === "permanent";
});

_defineProperty(EdgeSidebarBuilder, "isTemporaryConfig", function (config) {
  return (config === null || config === void 0 ? void 0 : config.variant) === "temporary";
});