function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

import React from "react";
import cx from "clsx";
import { styled } from "@mui/material/styles";
import FullscreenContext from "./FullscreenContext";
var FullscreenRoot = styled("div", {
  name: "Fullscreen",
  slot: "Root"
})({
  height: "100vh",
  display: "flex",
  flexDirection: "column",
  overflow: "hidden"
});
export var Fullscreen = props => {
  return /*#__PURE__*/React.createElement(FullscreenContext.Provider, {
    value: true
  }, /*#__PURE__*/React.createElement(FullscreenRoot, _extends({}, props, {
    className: cx("Fullscreen", props.className)
  })));
};