import { plusCalc, subtractCalc } from "../utils/calc";

function getMaxFloatHeight(configs) {
  if (!configs.length) return 0;
  if (configs.length === 1) return plusCalc(configs[0].height, configs[0].top);
  return "max(".concat(configs.map(c => plusCalc(c.height, c.top)).join(", "), ")");
}

function sumHeight(configs) {
  if (!configs.length) return 0;
  return plusCalc(...configs.map(c => c.height));
}

export var StackedHeaders = configs => {
  var nonRelativeConfigs = [];
  configs.forEach(c => {
    if (!!c && c.position !== "relative") {
      nonRelativeConfigs.push(c);
    }
  });
  var maxNonRelativeHeight = getMaxFloatHeight(nonRelativeConfigs);
  var totalHeight = sumHeight(configs.filter(c => !!c)); // for offset height

  var diffHeight = subtractCalc(totalHeight, maxNonRelativeHeight); // for -marginTop

  return {
    totalHeight,
    diffHeight
  };
};