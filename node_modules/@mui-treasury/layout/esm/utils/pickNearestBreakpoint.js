import { BREAKPOINT_KEYS } from "./muiBreakpoints";
export var pickNearestBreakpoint = (value, currentBreakpoint) => {
  if (!value || !currentBreakpoint) return undefined;
  var breakpointIndex = BREAKPOINT_KEYS.indexOf(currentBreakpoint);

  if (breakpointIndex === -1) {
    throw new Error("Breakpoint: \"".concat(currentBreakpoint, "\" does not exist in [").concat(BREAKPOINT_KEYS.join(","), "]"));
  } // [breakpoint, ..., 'xs']


  var possibleBreakpoints = BREAKPOINT_KEYS.slice(0, BREAKPOINT_KEYS.indexOf(currentBreakpoint) + 1).reverse();
  var result = value[currentBreakpoint];
  if (result) return result; // return the first valid value

  for (var bp of possibleBreakpoints) {
    if (result !== undefined) return result;
    result = value[bp];
  }

  return result;
};