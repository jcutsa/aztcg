{"ast":null,"code":"var _jsxFileName = \"/Users/ianuriegas/Desktop/Spring2023/SoftwareEngineering/Project/aztcg/front-end/src/components/CardList.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useState } from 'react';\nimport Card from \"./Card\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function CardList() {\n  _s();\n  const cards = [{\n    name: \"Solemn Judgment - Maze of Memories (MAZE)\",\n    image: require(\"./images/card1.jpg\"),\n    price: 2.24\n  }, {\n    name: \"Nibiru, the Primal Being - 2022 Tin of the Pharaoh's Gods (MP22)\",\n    image: require(\"./images/card2.jpg\"),\n    price: 4.01\n  }, {\n    name: \"Labyrinth Heavy Tank - Maze of Memories (MAZE)\",\n    image: require(\"./images/card3.jpg\"),\n    price: 0.4\n  }];\n  const [filteredCards, setFilteredCards] = useState(cards);\n  function handleFilterChange(event) {\n    const query = event.target.value.toLowerCase();\n    const filtered = cards.filter(card => card.name.toLowerCase().includes(query));\n    setFilteredCards(filtered);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Filter by card name...\",\n      onChange: handleFilterChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\",\n        width: \"400px\",\n        height: \"400px\"\n      },\n      children: filteredCards.map(card => /*#__PURE__*/_jsxDEV(Card, {\n        ...card,\n        style: {\n          display: \"inline-block\"\n        }\n      }, card.name, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n_s(CardList, \"9Txlyaw+PbiAg36k4FjcjgQ/zFc=\");\n_c = CardList;\nvar _c;\n$RefreshReg$(_c, \"CardList\");","map":{"version":3,"names":["React","useState","Card","jsxDEV","_jsxDEV","CardList","_s","cards","name","image","require","price","filteredCards","setFilteredCards","handleFilterChange","event","query","target","value","toLowerCase","filtered","filter","card","includes","children","type","placeholder","onChange","fileName","_jsxFileName","lineNumber","columnNumber","style","display","width","height","map","_c","$RefreshReg$"],"sources":["/Users/ianuriegas/Desktop/Spring2023/SoftwareEngineering/Project/aztcg/front-end/src/components/CardList.js"],"sourcesContent":["import React from \"react\";\nimport { useState } from 'react';\nimport Card from \"./Card\";\n\nexport default function CardList() {\n  const cards = [\n    {\n      name: \"Solemn Judgment - Maze of Memories (MAZE)\",\n      image: require(\"./images/card1.jpg\"),\n      price: 2.24,\n    },\n    {\n      name: \"Nibiru, the Primal Being - 2022 Tin of the Pharaoh's Gods (MP22)\",\n      image: require(\"./images/card2.jpg\"),\n      price: 4.01,\n    },\n    {\n      name: \"Labyrinth Heavy Tank - Maze of Memories (MAZE)\",\n      image: require(\"./images/card3.jpg\"),\n      price: 0.4,\n    },\n  ];\n  const [filteredCards, setFilteredCards] = useState(cards);\n\n  function handleFilterChange(event) {\n    const query = event.target.value.toLowerCase();\n    const filtered = cards.filter((card) =>\n      card.name.toLowerCase().includes(query)\n    );\n    setFilteredCards(filtered);\n  }\n\n  return (\n    <div>\n      <input\n        type=\"text\"\n        placeholder=\"Filter by card name...\"\n        onChange={handleFilterChange}\n      />\n      <div style={{ display: \"flex\", width: \"400px\", height: \"400px\" }}>\n        {filteredCards.map((card) => (\n          <Card key={card.name} {...card} style={{ display: \"inline-block\" }} />\n        ))}\n      </div>\n    </div>\n  );\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,OAAO;AAChC,OAAOC,IAAI,MAAM,QAAQ;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,eAAe,SAASC,QAAQA,CAAA,EAAG;EAAAC,EAAA;EACjC,MAAMC,KAAK,GAAG,CACZ;IACEC,IAAI,EAAE,2CAA2C;IACjDC,KAAK,EAAEC,OAAO,CAAC,oBAAoB,CAAC;IACpCC,KAAK,EAAE;EACT,CAAC,EACD;IACEH,IAAI,EAAE,kEAAkE;IACxEC,KAAK,EAAEC,OAAO,CAAC,oBAAoB,CAAC;IACpCC,KAAK,EAAE;EACT,CAAC,EACD;IACEH,IAAI,EAAE,gDAAgD;IACtDC,KAAK,EAAEC,OAAO,CAAC,oBAAoB,CAAC;IACpCC,KAAK,EAAE;EACT,CAAC,CACF;EACD,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGZ,QAAQ,CAACM,KAAK,CAAC;EAEzD,SAASO,kBAAkBA,CAACC,KAAK,EAAE;IACjC,MAAMC,KAAK,GAAGD,KAAK,CAACE,MAAM,CAACC,KAAK,CAACC,WAAW,EAAE;IAC9C,MAAMC,QAAQ,GAAGb,KAAK,CAACc,MAAM,CAAEC,IAAI,IACjCA,IAAI,CAACd,IAAI,CAACW,WAAW,EAAE,CAACI,QAAQ,CAACP,KAAK,CAAC,CACxC;IACDH,gBAAgB,CAACO,QAAQ,CAAC;EAC5B;EAEA,oBACEhB,OAAA;IAAAoB,QAAA,gBACEpB,OAAA;MACEqB,IAAI,EAAC,MAAM;MACXC,WAAW,EAAC,wBAAwB;MACpCC,QAAQ,EAAEb;IAAmB;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAC7B,eACF3B,OAAA;MAAK4B,KAAK,EAAE;QAAEC,OAAO,EAAE,MAAM;QAAEC,KAAK,EAAE,OAAO;QAAEC,MAAM,EAAE;MAAQ,CAAE;MAAAX,QAAA,EAC9DZ,aAAa,CAACwB,GAAG,CAAEd,IAAI,iBACtBlB,OAAA,CAACF,IAAI;QAAA,GAAqBoB,IAAI;QAAEU,KAAK,EAAE;UAAEC,OAAO,EAAE;QAAe;MAAE,GAAxDX,IAAI,CAACd,IAAI;QAAAoB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACrB;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACE;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACF;AAEV;AAACzB,EAAA,CA1CuBD,QAAQ;AAAAgC,EAAA,GAARhC,QAAQ;AAAA,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}