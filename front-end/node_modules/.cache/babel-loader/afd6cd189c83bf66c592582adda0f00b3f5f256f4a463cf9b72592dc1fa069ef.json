{"ast":null,"code":"var _jsxFileName = \"/Users/ianuriegas/Desktop/Spring2023/SoftwareEngineering/Project/aztcg/front-end/src/components/CardList.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport Card from './Card';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function CardList() {\n  _s();\n  const cards = [{\n    name: \"Solemn Judgment - Maze of Memories (MAZE)\",\n    image: require(\"./images/card1.jpg\"),\n    price: 2.24,\n    available: true\n  }, {\n    name: \"Nibiru, the Primal Being - 2022 Tin of the Pharaoh's Gods (MP22)\",\n    image: require(\"./images/card2.jpg\"),\n    price: 4.01,\n    available: false\n  }, {\n    name: \"Labyrinth Heavy Tank - Maze of Memories (MAZE)\",\n    image: require(\"./images/card3.jpg\"),\n    price: 0.40,\n    available: true\n  }];\n  const [filteredCards, setFilteredCards] = useState(cards);\n  const [searchQuery, setSearchQuery] = useState('');\n  const [sortBy, setSortBy] = useState('name');\n  function handleSearchChange(event) {\n    setSearchQuery(event.target.value.toLowerCase());\n  }\n  function handleSortChange(event) {\n    setSortBy(event.target.value);\n  }\n  function applyFilters() {\n    let filtered = cards;\n    if (searchQuery) {\n      filtered = filtered.filter(card => card.name.toLowerCase().includes(searchQuery));\n    }\n    if (sortBy === 'price') {\n      filtered = filtered.sort((a, b) => a.price - b.price);\n    } else if (sortBy === 'availability') {\n      filtered = filtered.sort((a, b) => a.available - b.available);\n    }\n    setFilteredCards(filtered);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Filter by card name...\",\n        onChange: handleSearchChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        onChange: handleSortChange,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"name\",\n          children: \"Sort by name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"price\",\n          children: \"Sort by price\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"availability\",\n          children: \"Sort by availability\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: applyFilters,\n        children: \"Apply filters\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\",\n        width: \"400px\",\n        height: \"400px\"\n      },\n      children: filteredCards.map(card => /*#__PURE__*/_jsxDEV(Card, {\n        name: card.name,\n        image: card.image,\n        price: card.price,\n        style: {\n          display: \"inline-block\"\n        },\n        children: card.available ? \"In Stock\" : \"Out of Stock\"\n      }, card.name, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n}\n_s(CardList, \"FCb11jWHyePnfz8mPYq2tsrolJA=\");\n_c = CardList;\nvar _c;\n$RefreshReg$(_c, \"CardList\");","map":{"version":3,"names":["useState","Card","jsxDEV","_jsxDEV","CardList","_s","cards","name","image","require","price","available","filteredCards","setFilteredCards","searchQuery","setSearchQuery","sortBy","setSortBy","handleSearchChange","event","target","value","toLowerCase","handleSortChange","applyFilters","filtered","filter","card","includes","sort","a","b","children","type","placeholder","onChange","fileName","_jsxFileName","lineNumber","columnNumber","onClick","style","display","width","height","map","_c","$RefreshReg$"],"sources":["/Users/ianuriegas/Desktop/Spring2023/SoftwareEngineering/Project/aztcg/front-end/src/components/CardList.js"],"sourcesContent":["import { useState } from 'react';\nimport Card from './Card';\n\nexport default function CardList() {\n  const cards = [\n    {\n      name: \"Solemn Judgment - Maze of Memories (MAZE)\",\n      image: require(\"./images/card1.jpg\"),\n      price: 2.24,\n      available: true\n    },\n    {\n      name: \"Nibiru, the Primal Being - 2022 Tin of the Pharaoh's Gods (MP22)\",\n      image: require(\"./images/card2.jpg\"),\n      price: 4.01,\n      available: false\n    },\n    {\n      name: \"Labyrinth Heavy Tank - Maze of Memories (MAZE)\",\n      image: require(\"./images/card3.jpg\"),\n      price: 0.40,\n      available: true\n    },\n  ];\n\n  const [filteredCards, setFilteredCards] = useState(cards);\n  const [searchQuery, setSearchQuery] = useState('');\n  const [sortBy, setSortBy] = useState('name');\n\n  function handleSearchChange(event) {\n    setSearchQuery(event.target.value.toLowerCase());\n  }\n\n  function handleSortChange(event) {\n    setSortBy(event.target.value);\n  }\n\n  function applyFilters() {\n    let filtered = cards;\n\n    if (searchQuery) {\n      filtered = filtered.filter((card) =>\n        card.name.toLowerCase().includes(searchQuery)\n      );\n    }\n\n    if (sortBy === 'price') {\n      filtered = filtered.sort((a, b) => a.price - b.price);\n    } else if (sortBy === 'availability') {\n      filtered = filtered.sort((a, b) => a.available - b.available);\n    }\n\n    setFilteredCards(filtered);\n  }\n\n  return (\n    <div>\n      <div>\n        <input\n          type=\"text\"\n          placeholder=\"Filter by card name...\"\n          onChange={handleSearchChange}\n        />\n        <select onChange={handleSortChange}>\n          <option value=\"name\">Sort by name</option>\n          <option value=\"price\">Sort by price</option>\n          <option value=\"availability\">Sort by availability</option>\n        </select>\n        <button onClick={applyFilters}>Apply filters</button>\n      </div>\n      <div style={{ display: \"flex\", width: \"400px\", height: \"400px\"}}>\n        {filteredCards.map((card) => (\n          <Card\n            key={card.name}\n            name={card.name}\n            image={card.image}\n            price={card.price}\n            style={{ display: \"inline-block\" }}\n          >\n            {card.available ? \"In Stock\" : \"Out of Stock\"}\n          </Card>\n        ))}\n      </div>\n    </div>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}